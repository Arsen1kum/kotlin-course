//package Kotlin.example.ru.stimmax.lessons.lesson6
//fun example1(arg: String) {
////Базовый Синтаксис:
////if (условие) {
////    // код для выполнения, если условие истинно
////}
//
////Пример
////    val number = 10
////    if (number > 5) {
//        println("Число больше 5")
//    }
//
////if (условие1) {
//    // код, если условие1 истинно
//} else if (условие2) {
//    // код, если условие2 истинно
//} else {
//    // код, если оба условия ложны
//}
//
////val number: Int = getNumber()
//if (number < 0) {
//    println("Число отрицательное")
//} else if (number == 0) {
//    println("Число равно 0")
//} else {
//    println("Число положительное")
//}
//
////    Типы данных для обозначения диапазона
////Есть специальные типы данных, которые позволяют формировать диапазон из подряд идущих значений для дальнейшего перебора.
////
////Синтаксис
//    val intRange = 1..10
//    val intRangeUntil = 1 until 10
//    val downTo = 10 downTo 1
//    val charRange = 'd'..'r'
//
//    val inRange = 2 in intRange
//    val notInRange = 2 !in intRange
//
////    Оператор when в Kotlin - это более продвинутая и гибкая версия операторов switch-case из других языков программирования.
//    when (выражение) {
//        значение1 -> { /* код */ }
//        значение2 -> { /* код */ }
//        else -> { /* код */ }
//    }
//    val score = 95
//    when (score) {
//        in 90..100 -> println("Отлично")
//        in 80..89 -> println("Хорошо")
//        in 70..79 -> println("Удовлетворительно")
//        else -> println("Нужно подучить")
//    }
//}