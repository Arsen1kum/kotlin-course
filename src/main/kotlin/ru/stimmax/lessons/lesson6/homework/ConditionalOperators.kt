package Kotlin.example.ru.stimmax.lessons.lesson6.homework

//Тестовые вызовы функций проводились через Main.kt

//Задание 1: "Определение сезона"
//Напишите функцию, которая на основе номера месяца распечатывает сезон года. Номера месяцев начинаются с единицы.

fun printSeason(month: Int) {
    if (month !in 1..12) {
        println("Некорректный номер месяца: $month")
        return
    }

    when (month) {
        in 12..12, in 1..2 -> println("Зима")
        in 3..5 -> println("Весна")
        in 6..8 -> println("Лето")
        in 9..11 -> println("Осень")
    }
}

//Задание 2: "Расчет возраста питомца"
//Создайте функцию, которая преобразует возраст собаки в "человеческие" годы. До 2 лет каждый год собаки равен 10.5
// человеческим годам, после - каждый год равен 4 человеческим годам. Результат распечатай в консоль.

// Функция принимает возраст собаки в годах и печатает эквивалент в человеческих годах
// Валидация: возраст должен быть >= 0, иначе выводим сообщение об ошибке
fun printDogToHumanYears(dogAge: Int) {
    if (dogAge < 0) {
        println("Некорректный возраст: $dogAge")
        return
    }

    val humanYears = if (dogAge <= 2) {
        dogAge * 10.5
    } else {
        2 * 10.5 + (dogAge - 2) * 4
    }

    println("Возраст собаки в человеческих годах: $humanYears")
}

//Задание 3: "Определение способа перемещения"
//Напишите функцию, которая печатает в консоль, какой способ перемещения лучше использовать, исходя из длины маршрута.
// Если маршрут до 1 км - "пешком", до 5 км - "велосипед", иначе - "автотранспорт".
fun printTransport(distance: Double) {
    if (distance <= 0.0) {
        println("Некорректная длина маршрута: $distance")
        return
    }

    when (distance) {
        in 0.0..1.0 -> println("пешком")
        in 1.0..5.0 -> println("велосипед")
        else -> println("автотранспорт")
    }
}

//Задание 4: "Расчет бонусных баллов"
//Клиенты интернет-магазина получают бонусные баллы за покупки. Напишите функцию, которая принимает сумму покупки и
// печатает в консоль количество бонусных баллов: 2 балла за каждые 100 рублей при сумме покупки до 1000 рублей и 3
// балла за каждые 100 рублей при сумме свыше этого.

// Функция принимает сумму покупки (Float) и печатает количество бонусных баллов
// Валидация: сумма должна быть > 0, иначе выводим сообщение об ошибке

fun printBonusPoints(purchaseAmount: Float) {
    if (purchaseAmount <= 0f) {
        println("Некорректная сумма покупки: $purchaseAmount")
        return
    }

    val bonusPoints = if (purchaseAmount <= 1000f) {
        // вся сумма до 1000 -> только по 2 балла
        (purchaseAmount / 100f).toInt() * 2
    } else {
        // первые 1000 -> по 2 балла, остаток -> по 3 балла
        val firstPartPoints = (1000f / 100f).toInt() * 2
        val remainingPartPoints = ((purchaseAmount - 1000f) / 100f).toInt() * 3
        firstPartPoints + remainingPartPoints
    }

    println("Начисленные бонусные баллы: $bonusPoints")
}

//Задание 5: "Определение типа документа"
//В системе хранения документов каждый файл имеет расширение. Напишите функцию, которая на основе расширения файла
// печатает в консоль его тип: "Текстовый документ", "Изображение", "Таблица" или "Неизвестный тип".

// Функция принимает расширение файла (String) и печатает его тип
// Валидация: строка не должна быть пустой, иначе выводим сообщение об ошибке
fun printFileType(extension: String) {
    if (extension.isBlank()) {
        println("Некорректное расширение файла")
        return
    }

    if (extension == "txt") {
        println("Текстовый документ")
    } else if (extension == "jpg" || extension == "png") {
        println("Изображение")
    } else if (extension == "xls" || extension == "xlsx") {
        println("Таблица")
    } else {
        println("Неизвестный тип")
    }
}

//Задание 6: "Конвертация температуры"
//
//Создайте функцию, которая конвертирует температуру из градусов Цельсия в Фаренгейты и наоборот в зависимости от
// указанной единицы измерения (C/F). Единицу измерения нужно передать вторым аргументом функции. Несколько аргументов
// передаются через запятую. Распечатай в консоль результат конвертации с добавлением единицы измерения.
// Чтобы добавить единицу измерения после результата используй функцию печати без переноса строки print("C") или print("F").

// Функция принимает температуру (Float) и единицу измерения (String: "C" или "F")
// Валидация: единица измерения должна быть "C" или "F", иначе выводим сообщение об ошибке
fun convertTemperature(value: Float, unit: String) {
    if (unit != "C" && unit != "F") {
        println("Некорректная единица измерения: $unit")
        return
    }

    if (unit == "C") {
        val result = value * 9 / 5 + 32
        print(result)
        println("F")
    } else {
        val result = (value - 32) * 5 / 9
        print(result)
        println("C")
    }
}

//Задание 7: "Подбор одежды по погоде"
//Напишите функцию, которая на основе температуры воздуха рекомендует тип одежды: "куртка и шапка" при температуре
// ниже +10, "ветровка" от +10 до +18 градусов включительно и "футболка и шорты" при температуре выше +18 градусов.
// При температурах ниже -30 и выше +35 рекомендуйте не выходить из дома.
// Функция принимает температуру воздуха (Float) и печатает рекомендацию по одежде
// Валидация: температура должна быть в разумных пределах (-100..100), иначе выводим сообщение об ошибке
fun recommendClothes(temperature: Float) {
    if (temperature < -100f || temperature > 100f) {
        println("Некорректное значение температуры: $temperature")
        return
    }

    if (temperature < -30f || temperature > 35f) {
        println("Рекомендация: не выходите из дома")
    } else if (temperature < 10f) {
        println("Рекомендация: куртка и шапка")
    } else if (temperature <= 18f) {
        println("Рекомендация: ветровка")
    } else {
        println("Рекомендация: футболка и шорты")
    }
}

//Задание 8: "Выбор фильма по возрасту"
//Кинотеатр предлагает фильмы разных возрастных категорий. Напишите функцию, которая принимает возраст зрителя и возвращает доступные для него категории фильмов: "детские" (от 0 до 9), "подростковые" (от 10 до 18), "18+" для остальных.
// Функция принимает возраст зрителя (Int) и печатает доступную категорию фильмов
// Валидация: возраст должен быть >= 0, иначе выводим сообщение об ошибке
fun printMovieCategory(age: Int) {
    if (age < 0) {
        println("Некорректный возраст: $age")
        return
    }

    when (age) {
        in 0..9 -> println("Доступные категории: детские")
        in 10..18 -> println("Доступные категории: подростковые")
        else -> println("Доступные категории: 18+")
    }
}

